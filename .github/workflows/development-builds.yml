name: Development Builds

on:
  push:
    branches: [develop]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'docs/**'

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'false'

      - name: Cache npm Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Project Dependencies and EAS CLI
        run: |
          npm install --no-package-lock --prefer-offline --no-audit --progress=false
          npm install -g eas-cli@latest

      - name: Cache EAS Build Artifacts
        uses: actions/cache@v4
        with:
          path: ~/.eas-build-local
          key: ${{ runner.os }}-eas-build-local-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-build-local-

      - name: Verify EAS CLI Installation
        run: |
          echo "EAS CLI version:"
          eas --version

      - name: Read App Name and Version
        id: app-info
        run: |
          APP_NAME=$(jq -r '.expo.name' app.json)
          APP_VERSION=$(jq -r '.expo.version' app.json)
          echo "app_name=${APP_NAME}" >> $GITHUB_OUTPUT
          echo "app_version=${APP_VERSION}" >> $GITHUB_OUTPUT
          echo "Generated APK base name: ${APP_NAME}-${APP_VERSION}"

      - name: Build Development APK
        run: |
          eas build --platform android --profile development --local --non-interactive --output=./${{ steps.app-info.outputs.app_name }}-${{ steps.app-info.outputs.app_version }}-dev.apk
        env:
          NODE_ENV: development

      - name: Upload Build Artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          path: |
            ./${{ steps.app-info.outputs.app_name }}-${{ steps.app-info.outputs.app_version }}-dev.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
